<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--
                Grid Styles
    -->
    <!-- Base grid style -->
    <Style x:Key="GridBase"
           TargetType="{x:Type Grid}">
        <Setter Property="Background"
                Value="LightGray" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
    </Style>
    <!--
                Borders
    -->
    <!-- Popup Border -->
    <Style x:Key="borderPopup"
           TargetType="{x:Type Border}">
        <Setter Property="Background"
                Value="LightGray" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
    </Style>
    <!-- Button Border -->
    <Style x:Key="borderButton"
           TargetType="Border">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#D6D6D6" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--
                StackPanel Styles
    -->
    <!-- Horizontal Stack -->
    <Style x:Key="horizontalStack"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Margin"
                Value="0,5,0,5" />
        <Setter Property="Orientation"
                Value="Horizontal" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
    </Style>
    <!-- Horizontal Stack Holder-->
    <Style x:Key="horizontalHolder"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Margin"
                Value="0, 40, 0, 0" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
    </Style>
    <!--
                Textblock Styles
    -->
    <!-- TextBlock Base -->
    <Style x:Key="TextblockBase"
           TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Yu Gothic" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
    </Style>
    <!-- TextBlock base with padding -->
    <Style x:Key="paddedTextblock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextblockBase}">
        <Setter Property="Padding"
                Value="5,0,5,0" />
    </Style>
    <!-- Textblock for status -->
    <Style x:Key="statusTextblock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextblockBase}">
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="TextWrapping"
                Value="Wrap" />
        <Setter Property="TextAlignment"
                Value="Center" />
    </Style>
    <!-- TextBlock Header-->
    <Style x:Key="TextblockHeader"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextblockBase}">
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="TextAlignment"
                Value="Center" />
    </Style>
    <!--
                Button Styles
    -->
    <!-- Button base -->
    <Style x:Key="buttonBase"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="FontFamily"
                Value="Yu Gothic" />
        <Setter Property="FontSize"
                Value="14" />
        <!--
        <Setter Property="Background"
                Value="DodgerBlue" />
        -->
        <Setter Property="Background"
                Value="#43B049" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="30,0,30,0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="DarkOrchid" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Half Pad Button Base -->
    <Style x:Key="halfPadButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource buttonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="15,0,15,0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Selected Button Base -->
    <Style x:Key="selectedBase"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource buttonBase}">
        <Setter Property="Background"
                Value="SlateGray" />
    </Style>
    <!--
                Textbox Styles
    -->
    <!-- Textbox Base -->
    <Style x:Key="TextboxBase"
           TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily"
                Value="Century Gothic" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
    </Style>
    <!--
                Combo box Styles
    -->
    <!-- Combo box Base -->
    <Style x:Key="ComboboxBase"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FontFamily"
                Value="Century Gothic" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
    </Style>
    <!--
                Checkbox Styles
    -->
    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0"
                                   StrokeThickness="1"
                                   Stroke="#60000000"
                                   StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Fill Brushes -->
    <LinearGradientBrush x:Key="NormalBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF"
                              Offset="0.0" />
                <GradientStop Color="#CCC"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalNormalBrush"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF"
                              Offset="0.0" />
                <GradientStop Color="#CCC"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LightBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF"
                              Offset="0.0" />
                <GradientStop Color="#EEE"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalLightBrush"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF"
                              Offset="0.0" />
                <GradientStop Color="#EEE"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="LightSteelBlue"
                              Offset="0.0" />
                <GradientStop Color="#CCC"
                              Offset="1.3" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB"
                              Offset="0.0" />
                <GradientStop Color="#EEE"
                              Offset="0.1" />
                <GradientStop Color="#EEE"
                              Offset="0.9" />
                <GradientStop Color="#FFF"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush"
                     Color="#EEE" />
    <SolidColorBrush x:Key="WindowBackgroundBrush"
                     Color="#FFF" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush"
                     Color="#DDD" />
    <!-- Border Brushes -->
    <LinearGradientBrush x:Key="NormalBorderBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#bbb"
                              Offset="0.0" />
                <GradientStop Color="#888"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC"
                              Offset="0.0" />
                <GradientStop Color="#444"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DefaultedBorderBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777"
                              Offset="0.0" />
                <GradientStop Color="#000"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444"
                              Offset="0.0" />
                <GradientStop Color="#888"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DisabledBorderBrush"
                     Color="#AAA" />
    <SolidColorBrush x:Key="SolidBorderBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="LightBorderBrush"
                     Color="#AAA" />
    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush"
                     Color="DarkBlue" />
    <SolidColorBrush x:Key="LightColorBrush"
                     Color="#DDD" />
    <!-- Checkbox Base -->
    <Style x:Key="checkboxBase"
           TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="FontFamily"
                Value="Century Gothic" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="Margin"
                Value="5,0,5,0" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource CheckBoxFocusVisual}" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="13"
                                    Height="13"
                                    CornerRadius="0"
                                    Background="{StaticResource NormalBrush}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource NormalBorderBrush}"
                                    Padding="0">
                                <Path Width="9"
                                      Height="9"
                                      x:Name="CheckMark"
                                      SnapsToDevicePixels="False"
                                      Stroke="{StaticResource GlyphBrush}"
                                      StrokeThickness="2"
                                      Data="F1 M 0.968732,4.64838L 3.63345,7.25443L 8.58127,0.720569"></Path>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="false">
                            <Setter TargetName="CheckMark"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter TargetName="CheckMark"
                                    Property="Data"
                                    Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>